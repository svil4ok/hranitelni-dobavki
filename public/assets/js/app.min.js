"use strict";var app=angular.module("HranitelniDobavki",["ngResource","ui.router","mm.foundation","smoothScroll"]);app.config(function($urlRouterProvider,$stateProvider){$urlRouterProvider.otherwise("/");$stateProvider.state("home",{url:"/",templateUrl:"app/home/home.html",controller:"HomeController",controllerAs:"home"}).state("additives",{"abstract":true,url:"/additives",template:"<ui-view />"}).state("additives.details",{url:"/view/:additiveNumber",templateUrl:"app/additives/additives-details.html",resolve:{additives:["$stateParams","AdditivesService",function($stateParams,AdditivesService){return AdditivesService.getAdditive($stateParams.additiveNumber)}]},controller:"AdditivesController",controllerAs:"adtv"}).state("additives.group",{url:"/group/:additiveGroup",templateUrl:"app/additives/additives-group.html",resolve:{additives:["$stateParams","AdditivesService",function($stateParams,AdditivesService){return AdditivesService.getGroup($stateParams.additiveGroup)}]},controller:"AdditivesController",controllerAs:"adtv"}).state("search",{url:"/search/:searchTerm",templateUrl:"app/search/search-results.html",resolve:{searchTerm:["$stateParams",function($stateParams){return $stateParams.searchTerm.trim()}],additives:["$stateParams","AdditivesService",function($stateParams,AdditivesService){return AdditivesService.search($stateParams.searchTerm.trim())}]},controller:"SearchController",controllerAs:"srch"}).state("about",{url:"/about",templateUrl:"app/about/about.html"}).state("faq",{url:"/faq",templateUrl:"app/faq/faq.html"})});app.run(function($rootScope,$state,$stateParams){$rootScope.$state=$state;$rootScope.$stateParams=$stateParams});"use strict";app.controller("AdditivesController",["additives",function(additives){var self=this;this.additives=additives;this.currentTab="group-description";this.isActiveTab=function(tabName){return tabName===self.currentTab}}]);"use strict";app.filter("displaySafety",function(){return function(safety){if(!safety){return}var input=safety.split(",");var output=[];for(var i=0;i<=input.length-1;i+=1){var current=input[i].trim();if(current==="safe"){output.push("Безопастни")}else if(current==="caution"){output.push("Съмнителни")}else if(current==="certain_avoid"){output.push("Неподходящи за вегетарианци")}else if(current==="avoid"){output.push("Вредни")}}return output.join(", ").toLowerCase()}});"use strict";app.directive("groupInformation",function(){return{restrict:"E",link:function(scope,elem,attrs){var tpls={colourings:"colourings.tpl.html",preservatives:"preservatives.tpl.html",noInfo:"no-info.tpl.html"};attrs.$observe("groupName",function(val){if(!val){return}if(angular.isUndefined(tpls[val])){scope.tplUrl="/data/tpls/"+tpls.noInfo}else{scope.tplUrl="/data/tpls/"+tpls[val]}})},template:'<div ng-include src="tplUrl" include-replace></div>'}});"use strict";app.controller("NavController",["AdditivesService",function(AdditivesService){var self=this;AdditivesService.getAll().$promise.then(function(data){self.additives=data.categories})}]);"use strict";app.factory("AdditivesData",["$resource",function($resource){return $resource("../data/hranitelni-dobavki.json",{},{query:{method:"GET",isArray:false}})}]);app.service("AdditivesService",["AdditivesData","$q",function(AdditivesData,$q){var self=this;this.getAll=function(){return AdditivesData.query()};this.getAdditive=function(additiveNumber){var deferred=$q.defer();AdditivesData.query(function(additives){var additive=self.searchAdditive(additives,additiveNumber.toLowerCase());if(Object.keys(additive).length>0){deferred.resolve(additive)}else{deferred.reject()}});return deferred.promise};this.getGroup=function(additiveGroup){var deferred=$q.defer();AdditivesData.query(function(additives){var group=self.searchGroup(additives,additiveGroup.toLowerCase());if(Object.keys(group).length>0){deferred.resolve(group)}else{deferred.reject()}});return deferred.promise};this.search=function(searchFor){var deferred=$q.defer();if(!/^[a-zA-Z0-9\u0400-\u04FF]*$/.test(searchFor)){deferred.reject({error:"Wrong input data!"});return deferred.promise}AdditivesData.query(function(additives){var output=[];for(var i=additives.categories.length-1;i>=0;i-=1){for(var j=additives.categories[i].additives.length-1;j>=0;j-=1){var number=additives.categories[i].additives[j].number;var nameBg=additives.categories[i].additives[j].name_bg;var nameEn=additives.categories[i].additives[j].name_en;if(self.contains(number,searchFor)||self.contains(nameBg,searchFor)||self.contains(nameEn,searchFor)){var additive=additives.categories[i].additives[j];additive.category={name:additives.categories[i].name,slug:additives.categories[i].slug};output.push(additive)}}}if(output.length){deferred.resolve(output.reverse())}else{deferred.resolve({error:"Nothing found!"})}});return deferred.promise};this.searchAdditive=function(additives,additiveNumber){for(var i=additives.categories.length-1;i>=0;i-=1){for(var j=additives.categories[i].additives.length-1;j>=0;j-=1){if(additives.categories[i].additives[j].number.toLowerCase()===additiveNumber){var additive=additives.categories[i].additives[j];additive.category={name:additives.categories[i].name,slug:additives.categories[i].slug};return additive}}}};this.searchGroup=function(additives,additiveGroup){for(var i=additives.categories.length-1;i>=0;i-=1){if(additives.categories[i].slug===additiveGroup){return additives.categories[i]}}};this.contains=function(r,s){return r.toLowerCase().indexOf(s.toLowerCase())!==-1}}]);"use strict";angular.module("mm.foundation",["mm.foundation.tpls","mm.foundation.accordion","mm.foundation.offcanvas"]);angular.module("mm.foundation.tpls",["template/accordion/accordion-group.html","template/accordion/accordion.html"]);"use strict";angular.module("mm.foundation.accordion",[]).constant("accordionConfig",{closeOthers:true}).controller("AccordionController",function($scope,$attrs,accordionConfig){this.groups=[];this.closeOthers=function(openGroup){var closeOthers=angular.isDefined($attrs.closeOthers)?$scope.$eval($attrs.closeOthers):accordionConfig.closeOthers;if(closeOthers){angular.forEach(this.groups,function(group){if(group!==openGroup){group.isOpen=false}})}};this.addGroup=function(groupScope){var self=this;this.groups.push(groupScope);groupScope.$on("$destroy",function(){self.removeGroup(groupScope)})};this.removeGroup=function(group){var index=this.groups.indexOf(group);if(index!==-1){this.groups.splice(this.groups.indexOf(group),1)}}}).directive("accordion",function(){return{restrict:"EA",controller:"AccordionController",transclude:true,replace:false,templateUrl:"template/accordion/accordion.html"}}).directive("accordionGroup",["$parse",function($parse){return{require:"^accordion",restrict:"EA",transclude:true,replace:true,templateUrl:"template/accordion/accordion-group.html",scope:{heading:"@"},controller:function(){this.setHeading=function(element,scrollTo){this.heading=element;this.heading.scrollTo=scrollTo}},link:function(scope,element,attrs,accordionCtrl){var getIsOpen;var setIsOpen;accordionCtrl.addGroup(scope);scope.isOpen=false;if(attrs.isOpen){getIsOpen=$parse(attrs.isOpen);setIsOpen=getIsOpen.assign;scope.$parent.$watch(getIsOpen,function(value){scope.isOpen=!!value})}scope.$watch("isOpen",function(value){if(value){accordionCtrl.closeOthers(scope)}if(setIsOpen){setIsOpen(scope.$parent,value)}})}}}]).directive("accordionHeading",function(){return{restrict:"EA",transclude:true,template:"",replace:true,require:"^accordionGroup",compile:function(element,attrs,transclude){return function link(scope,el,attr,accordionGroupCtrl){accordionGroupCtrl.setHeading(transclude(scope,function(){}),attr.scrollTo)}}}}).directive("accordionTransclude",function(){return{require:"^accordionGroup",link:function(scope,element,attr,controller){scope.$watch(function(){return controller[attr.accordionTransclude]},function(heading){if(heading){element.html("");element.append(heading);scope.scrollToEl=heading.scrollTo}})}}});angular.module("template/accordion/accordion-group.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("template/accordion/accordion-group.html","<dd>\n"+'  <a ng-click="isOpen = !isOpen" ng-class="{ active: isOpen }" accordion-transclude="heading" scroll-to="{{ scrollToEl }}" >{{ heading }}</a>\n'+'  <div class="content" ng-style="isOpen ? { display: \'block\' } : {}" ng-transclude></div>\n'+"</dd>\n"+"")}]);angular.module("template/accordion/accordion.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("template/accordion/accordion.html",'<dl class="accordion" ng-transclude></dl>\n'+"")}]);"use strict";angular.module("mm.foundation.offcanvas",[]).directive("offCanvasWrap",["$window",function($window){return{scope:{},restrict:"C",link:function($scope,element){var win=angular.element($window);var sidebar=$scope.sidebar=element;$scope.hide=function(){sidebar.removeClass("move-left");sidebar.removeClass("move-right")};win.bind("resize.body",$scope.hide);$scope.$on("$destroy",function(){win.unbind("resize.body",$scope.hide)})},controller:["$scope",function($scope){this.leftToggle=function(){$scope.sidebar.toggleClass("move-right")};this.rightToggle=function(){$scope.sidebar.toggleClass("move-left")};this.hide=function(){$scope.hide()}}]}}]).directive("leftOffCanvasToggle",[function(){return{require:"^offCanvasWrap",restrict:"C",link:function($scope,element,attrs,offCanvasWrap){element.on("click",function(){offCanvasWrap.leftToggle()})}}}]).directive("rightOffCanvasToggle",[function(){return{require:"^offCanvasWrap",restrict:"C",link:function($scope,element,attrs,offCanvasWrap){element.on("click",function(){offCanvasWrap.rightToggle()})}}}]).directive("exitOffCanvas",[function(){return{require:"^offCanvasWrap",restrict:"C",link:function($scope,element,attrs,offCanvasWrap){element.on("click",function(){offCanvasWrap.hide()})}}}]).directive("offCanvasList",[function(){return{require:"^offCanvasWrap",restrict:"C",link:function($scope,element,attrs,offCanvasWrap){element.on("click",function(){offCanvasWrap.hide()})}}}]);"use strict";app.directive("includeReplace",[function(){return{require:"ngInclude",restrict:"A",link:function(scope,elem){elem.replaceWith(elem.children())}}}]);"use strict";app.controller("HomeController",["$scope","$state","AdditivesService",function($scope,$state,AdditivesService){var self=this;$scope.oneAtATime=true;AdditivesService.getAll().$promise.then(function(data){self.additives=data.categories});self.search=function(){if(angular.isDefined(self.searchTerm)&&self.additiveSearch.$valid&&/^[a-zA-Z0-9]*$/.test(self.searchTerm)){$state.go("search",{searchTerm:self.searchTerm})}}}]);"use strict";app.controller("SearchController",["$scope","$state","searchTerm","additives",function($scope,$state,searchTerm,additives){var self=this;var resultMessage='Не бяха намерени резултати за "'+searchTerm+'"';var list=false;if(angular.isUndefined(additives.error)&&searchTerm){list=true;resultMessage='Показване на резултати за "'+searchTerm+'"'}this.list=list;this.additives=additives;this.resultMessage=resultMessage;this.searchSubmit=function(){$state.go("search",{searchTerm:self.searchTerm})}}]);